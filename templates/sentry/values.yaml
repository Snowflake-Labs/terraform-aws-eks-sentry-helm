prefix: "${module_prefix}"

user:
  create: true
  email: "${sentry_email}"
  password: "${sentry_password}"

# serviceAccount:
#   annotations: { eks.amazonaws.com/role-arn: "${eks_service_account_role_arn}" }
#   enabled: true
#   name: "sentry"
#   automountServiceAccountToken: true

# system:
#   url: "https://${sentry_dns_name}"
#   public: true

# service:
#   name: sentry
#   type: ClusterIP
#   externalPort: 9000
#   annotations:
#     # service.beta.kubernetes.io/aws-load-balancer-ssl-negotiation-policy: "ELBSecurityPolicy-TLS-1-2-2017-01"
#     # service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "${lb_cert}"
#     service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
#     service.beta.kubernetes.io/aws-load-balancer-backend-port: "9000"
#     service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443,8443"
#   loadBalancerSourceRanges: "${allowed_cidr_blocks}"

nginx:
  enabled: false

ingress:
  enabled: true
  hostname: "${sentry_dns_name}"
  # regexPathStyle: "aws-alb"
  # alb:
  #   httpRedirect: true
  annotations:
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: "internet-facing"
    alb.ingress.kubernetes.io/target-type: "instance"
    external-dns.alpha.kubernetes.io/hostname: "${sentry_dns_name}"
    alb.ingress.kubernetes.io/certificate-arn: ${subdomain_cert_arn}
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 443}]'
